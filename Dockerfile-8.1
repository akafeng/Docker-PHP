FROM debian:bookworm-slim AS builder

ARG PHP_VERSION="8.1.29"
ARG PHP_GPG_KEYS="528995BFEDFBA7191D46839EF9BA0ADA31CBD89E 39B641343D8C104B2B146DC3F9C39DC0B9698544 F1F692238FBC1666E5A5CCD4199F9DFEF6FFBAFD"
ARG PHP_URL="https://mirror.cogentco.com/pub/php/php-${PHP_VERSION}.tar.xz"
ARG PHP_ASC_URL="https://mirror.cogentco.com/pub/php/php-${PHP_VERSION}.tar.xz.asc"

ARG PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O3 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
ARG PHP_CPPFLAGS="${PHP_CFLAGS}"
ARG PHP_LDFLAGS="-Wl,-O1 -pie"
ARG PHP_INI_DIR="/usr/local/etc/php"

ARG PICKLE_VERSION="0.7.11"
ARG PICKLE_URL="https://github.com/FriendsOfPHP/pickle/releases/download/v${PICKLE_VERSION}/pickle.phar"

ARG COMPOSER_VERSION="2.7.7"
ARG COMPOSER_URL="https://getcomposer.org/download/${COMPOSER_VERSION}/composer.phar"

ARG SWOOLE_VERSION="5.1.3"
ARG SWOOLE_URL="https://github.com/swoole/swoole-src/archive/refs/tags/v${SWOOLE_VERSION}.tar.gz"

RUN set -eux \
    && apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        ca-certificates \
        wget \
        gnupg \
        \
        file \
        build-essential \
        autoconf \
        pkg-config \
        re2c \
        bison \
        libargon2-dev \
        libcurl4-openssl-dev \
        libedit-dev \
        libonig-dev \
        libsodium-dev \
        libsqlite3-dev \
        libssl-dev \
        libxml2-dev \
        zlib1g-dev \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && cd /usr/src/ \
    && wget -O php.tar.xz ${PHP_URL} \
    && wget -O php.tar.xz.asc ${PHP_ASC_URL} \
    \
    && export GNUPGHOME=$(mktemp -d); \
        for key in ${PHP_GPG_KEYS}; do \
            gpg --batch --keyserver hkps://pgp.surf.nl --keyserver-options timeout=10 --recv-keys ${key} || \
            gpg --batch --keyserver hkps://keyserver.ubuntu.com --keyserver-options timeout=10 --recv-keys ${key}; \
        done \
    && gpg --batch --verify php.tar.xz.asc php.tar.xz \
    && gpgconf --kill all \
    && rm -rf ${GNUPGHOME}

COPY docker-php-source /usr/local/bin/

RUN set -eux \
    && docker-php-source extract \
    && mkdir -p ${PHP_INI_DIR}/conf.d/ \
    \
    && cd /usr/src/php \
    && export \
        CFLAGS="${PHP_CFLAGS}" \
        CPPFLAGS="${PHP_CPPFLAGS}" \
        LDFLAGS="${PHP_LDFLAGS}" \
    && gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE) \
    && ./configure \
        --build=${gnuArch} \
        --with-config-file-path=${PHP_INI_DIR} \
        --with-config-file-scan-dir=${PHP_INI_DIR}/conf.d \
        --enable-option-checking=fatal \
        --with-mhash \
        --with-pic \
        --enable-ftp \
        --enable-mbstring \
        --enable-mysqlnd \
        --with-password-argon2 \
        --with-sodium=shared \
        --with-pdo-sqlite=/usr \
        --with-sqlite3=/usr \
        --with-curl \
        --with-libedit \
        --with-openssl \
        --with-zlib \
        --disable-phpdbg \
        --with-pear \
        --enable-fpm \
        --with-fpm-user=www-data \
        --with-fpm-group=www-data \
        --disable-cgi \
    && make -j $(nproc) \
    && make install \
    && { find /usr/local/bin/ /usr/local/sbin/ -type f -executable -exec strip --strip-all "{}" + || true; } \
    && make clean \
    && cp -v php.ini-* ${PHP_INI_DIR}/ \
    && cd / \
    && docker-php-source delete

COPY docker-php-ext-* /usr/local/bin/

# zip
RUN apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        libzip-dev \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && docker-php-ext-install -j $(nproc) zip \
    && { rm -rf /usr/local/lib/php/test/zip/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/zip/ || true; }

# pickle
RUN wget -O /usr/bin/pickle ${PICKLE_URL} \
    && chmod a+x /usr/bin/pickle

# apcu
RUN { pickle install apcu --no-interaction --defaults || true; } \
    && cd /tmp/apcu/apcu*/ \
    && phpize \
    && ./configure \
    && make -j $(nproc) \
    && make install \
    && docker-php-ext-enable apcu \
    && { rm -rf /tmp/apcu/ || true; } \
    && { rm -rf /usr/local/lib/php/test/apcu/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/apcu/ || true; }

# bcmath
RUN docker-php-ext-install -j $(nproc) bcmath \
    && { rm -rf /usr/local/lib/php/test/bcmath/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/bcmath/ || true; }

# exif
RUN docker-php-ext-install -j $(nproc) exif \
    && { rm -rf /usr/local/lib/php/test/exif/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/exif/ || true; }

# gd
RUN apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        libgd-dev \
        libwebp-dev \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && docker-php-ext-configure gd \
        --enable-gd \
        --with-webp \
        --with-jpeg \
        --with-xpm \
        --with-freetype \
    && docker-php-ext-install -j $(nproc) gd \
    && { rm -rf /usr/local/lib/php/test/gd/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/gd/ || true; }

# gettext
RUN docker-php-ext-install -j $(nproc) gettext \
    && { rm -rf /usr/local/lib/php/test/gettext/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/gettext/ || true; }

# gmp
RUN apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        libgmp-dev \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && docker-php-ext-install -j $(nproc) gmp \
    && { rm -rf /usr/local/lib/php/test/gmp/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/gmp/ || true; }

# imagick
RUN apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        libmagickwand-dev \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && { pickle install imagick --no-interaction --defaults || true; } \
    && cd /tmp/imagick/imagick*/ \
    && phpize \
    && ./configure \
    && make -j $(nproc) \
    && make install \
    && docker-php-ext-enable imagick \
    && { rm -rf /tmp/imagick/ || true; } \
    && { rm -rf /usr/local/lib/php/test/imagick/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/imagick/ || true; }

# intl
RUN docker-php-ext-install -j $(nproc) intl \
    && { rm -rf /usr/local/lib/php/test/intl/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/intl/ || true; }

# memcached
RUN apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        libmemcached-dev \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && { pickle install memcached --no-interaction --defaults || true; } \
    && cd /tmp/memcached/memcached*/ \
    && phpize \
    && ./configure \
    && make -j $(nproc) \
    && make install \
    && docker-php-ext-enable memcached \
    && { rm -rf /tmp/memcached/ || true; } \
    && { rm -rf /usr/local/lib/php/test/memcached/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/memcached/ || true; }

# mysqli
RUN docker-php-ext-install -j $(nproc) mysqli \
    && { rm -rf /usr/local/lib/php/test/mysqli/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/mysqli/ || true; }

# opcache
RUN docker-php-ext-install -j $(nproc) opcache \
    && { rm -rf /usr/local/lib/php/test/opcache/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/opcache/ || true; }

# pcntl
RUN docker-php-ext-install -j $(nproc) pcntl \
    && { rm -rf /usr/local/lib/php/test/pcntl/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/pcntl/ || true; }

# pdo_mysql
RUN docker-php-ext-install -j $(nproc) pdo_mysql \
    && { rm -rf /usr/local/lib/php/test/pdo_mysql/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/pdo_mysql/ || true; }

# pdo_pgsql
RUN apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        libpq-dev \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && docker-php-ext-install -j $(nproc) pdo_pgsql \
    && { rm -rf /usr/local/lib/php/test/pdo_pgsql/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/pdo_pgsql/ || true; }

# pgsql
RUN docker-php-ext-install -j $(nproc) pgsql \
    && { rm -rf /usr/local/lib/php/test/pgsql/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/pgsql/ || true; }

# redis
RUN { pickle install redis --no-interaction --defaults || true; } \
    && cd /tmp/redis/redis*/ \
    && phpize \
    && ./configure \
    && make -j $(nproc) \
    && make install \
    && docker-php-ext-enable redis \
    && { rm -rf /tmp/redis/ || true; } \
    && { rm -rf /usr/local/lib/php/test/redis/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/redis/ || true; }

# shmop
RUN docker-php-ext-install -j $(nproc) shmop \
    && { rm -rf /usr/local/lib/php/test/shmop/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/shmop/ || true; }

# soap
RUN docker-php-ext-install -j $(nproc) soap \
    && { rm -rf /usr/local/lib/php/test/soap/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/soap/ || true; }

# sockets
RUN docker-php-ext-install -j $(nproc) sockets \
    && { rm -rf /usr/local/lib/php/test/sockets/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/sockets/ || true; }

# sodium
RUN docker-php-ext-enable sodium \
    && { rm -rf /usr/local/lib/php/test/sodium/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/sodium/ || true; }

# swoole
RUN apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        libc-ares-dev \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && wget -O swoole.tar.gz ${SWOOLE_URL} \
    && mkdir /tmp/swoole/ \
    && tar -xzvf swoole.tar.gz -C /tmp/swoole/ \
    && cd /tmp/swoole/swoole*/ \
    && phpize \
    && ./configure \
        --enable-openssl \
        --enable-swoole-curl \
        --enable-cares \
        --enable-brotli \
        --enable-swoole-pgsql \
        --enable-swoole-sqlite \
    && make -j $(nproc) \
    && make install \
    && docker-php-ext-enable swoole \
    && { rm -rf /tmp/swoole/ || true; } \
    && { rm -rf /usr/local/lib/php/test/swoole/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/swoole/ || true; }

# sysvsem
RUN docker-php-ext-install -j $(nproc) sysvsem \
    && { rm -rf /usr/local/lib/php/test/sysvsem/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/sysvsem/ || true; }

# tidy
RUN apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        libtidy-dev \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && docker-php-ext-install -j $(nproc) tidy \
    && { rm -rf /usr/local/lib/php/test/tidy/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/tidy/ || true; }

# xsl
RUN apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        libxslt1-dev \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && docker-php-ext-install -j $(nproc) xsl \
    && { rm -rf /usr/local/lib/php/test/xsl/ || true; } \
    && { rm -rf /usr/local/lib/php/doc/xsl/ || true; }

# composer
RUN wget -O /usr/local/bin/composer ${COMPOSER_URL} \
    && chmod a+x /usr/local/bin/composer

# strip extensions
RUN strip --strip-all `php-config --extension-dir`/*.so

######

FROM debian:bookworm-slim

COPY --from=builder /usr/local/ /usr/local/

RUN set -eux \
    && apt-get update -qyy \
    && apt-get install -qyy --no-install-recommends --no-install-suggests \
        cron \
        openssl \
        ca-certificates \
        libargon2-1 \
        libcurl4 \
        libedit2 \
        libonig5 \
        libsodium23 \
        libsqlite3-0 \
        libxml2 \
        libncurses6 \
        libgd3 \
        libmagickwand-6.q16-6 \
        libicu72 \
        libmemcached11 \
        libmemcachedutil2 \
        libpq5 \
        libc-ares2 \
        libtidy5deb1 \
        libxslt1.1 \
        libzip4 \
    && rm -rf /var/lib/apt/lists/* /var/log/* \
    \
    && mkdir -p /var/www/html \
    && chown www-data:www-data /var/www/html \
    && chmod 777 /var/www/html \
    \
    && cd /usr/local/etc \
    && if [ -d php-fpm.d ]; then \
            sed "s!=NONE/!=!g" php-fpm.conf.default | tee php-fpm.conf > /dev/null; \
            cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \
        else \
            mkdir php-fpm.d; \
            cp php-fpm.conf.default php-fpm.d/www.conf; \
            { \
                echo "[global]"; \
                echo "include=etc/php-fpm.d/*.conf"; \
            } | tee php-fpm.conf; \
        fi \
    && { \
            echo "[global]"; \
            echo "error_log = /proc/self/fd/2"; \
            echo; \
            echo "; https://github.com/docker-library/php/pull/725#issuecomment-443540114"; \
            echo "log_limit = 8192"; \
            echo; \
            echo "[www]"; \
            echo "; if we send this to /proc/self/fd/1, it never appears"; \
            echo "access.log = /proc/self/fd/2"; \
            echo; \
            echo "clear_env = no"; \
            echo; \
            echo "; Ensure worker stdout and stderr are sent to the main error log."; \
            echo "catch_workers_output = yes"; \
            echo "decorate_workers_output = no"; \
        } | tee php-fpm.d/docker.conf \
    && { \
            echo "[global]"; \
            echo "daemonize = no"; \
            echo; \
            echo "[www]"; \
            echo "listen = 9000"; \
        } | tee php-fpm.d/zz-docker.conf \
    && { \
            echo "opcache.memory_consumption = 128"; \
            echo "opcache.interned_strings_buffer = 8"; \
            echo "opcache.max_accelerated_files = 4000"; \
            echo "opcache.revalidate_freq = 60"; \
            echo "opcache.fast_shutdown = 1"; \
            echo "opcache.enable_cli = 1"; \
        } > /usr/local/etc/php/conf.d/opcache-recommended.ini \
    && { \
            echo "memory_limit = 256M"; \
            echo "upload_max_filesize = 50M"; \
            echo "post_max_size = 100M"; \
            echo "max_execution_time = 600"; \
            echo "default_socket_timeout = 3600"; \
            echo "request_terminate_timeout = 600"; \
        } > /usr/local/etc/php/conf.d/options.ini

COPY docker-entrypoint.sh /usr/local/bin/
ENTRYPOINT ["docker-entrypoint.sh"]

WORKDIR /var/www/html

EXPOSE 9000

STOPSIGNAL SIGQUIT

CMD ["php-fpm"]
